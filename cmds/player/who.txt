// Last edited by deforce on 11-26-2007
#include <playerflags.h>

inherit CMD;
inherit M_ANSI;
inherit CLASS_FINGER;

#define WIDTH this_user()->query_screen_width()
#define DELIM (repeat_string("=", (WIDTH - 1)) + "\n")

string format_idle_time(int time);
string format_status(string user);
string show_location(string line, object body);

string get_who_string()
{
   string output = "";
   string array users_all = sort_array(bodies()->query_userid(), 1);
   string array users_admin;
   string array users_wizard;
   string array users_player;

   users_admin = filter_array(users_all, (: adminp($1) :));
   users_wizard = filter_array(filter_array(users_all, (: !adminp($1) :)), (: wizardp($1) :));
   users_player = filter_array(users_all, (: !wizardp($1) :));

   output += "\n\n%^CYAN%^" + colour_center(implode(explode(upper_case(mud_name()), ""), " ")) + "%^RESET%^\n";
   output += "%^CYAN%^" + colour_center(ctime(time()) + "   -   " + sizeof(users_all) + " adventurers") + "%^RESET%^\n";
   output += DELIM;

   foreach (string user in users_admin)
   {
      object body = find_body(user);

      if (body && (body->is_visible() || wizardp(this_body())))
      {
         string line = "%^BOLD%^[Admin] ";

         line += format_status(user);

         output += show_location(line, body) + "\n";
      }
   }

   foreach (string user in users_wizard)
   {
      object body = find_body(user);

      if (body && (body->is_visible() || wizardp(this_body())))
      {
         string line = "%^BOLD%^[Wizard] ";

         line += format_status(user);

         output += show_location(line, body) + "\n";
      }
   }

   foreach (string user in users_player)
   {
      object body = find_body(user);

      if (body)
      {
         string line = "%^ORANGE%^";

         line += format_status(user);

         output += show_location(line, body) + "\n";
      }
   }

   return output;
}

string format_idle_time(int time)
{
   string output = "";

   if (time > 59)
   {
      output += " (";

      if (time > 3599)
      {
         if (time > 86399)
         {
            output += (time / 86400) + "d, ";

            time = time % 86400;
         }

         output += (time / 3600) + "h, ";

         time = time % 3600;
      }

      output += (time / 60) + "m";

      if (wizardp(this_user()) && (time > 0)) { output += ", " + (time % 60) + "s"; }

      output += ")";
   }
   else if (wizardp(this_user()) && (time > 0)) { output += " (" + (time % 60) + "s)"; }

   return output;
}

string format_status(string user)
{
   object body = find_body(user);
   class finger user_info = FINGER_D->get_finger_data(user);
   string output = "";

   if (body->test_flag(F_IN_EDIT)) { output += (wizardp(user) ? "** " : "*"); }
   output += (!body->is_visible() ? "(" : "");

   output += replace_string((user_info->title ? user_info->title : user_info->visname), "%^RESET%^", "");

   output += (!body->is_visible() ? ")" : "");
   if (body->test_flag(F_IN_EDIT)) { output += (wizardp(user) ? " **" : "*"); }

   output += "%^RESET%^" + (body->test_flag(F_INACTIVE) ? " (away)" : "");
   output += (!body->test_flag(F_INACTIVE) || wizardp(this_body()) ? format_idle_time(query_idle(body->query_link())) : "");

   return output;
}

string show_location(string line, object body)
{
   if (wizardp(this_user()))
   {
      string room_desc = (environment(body) ? environment(body)->get_brief() : "(Nowhere)");
      int free_space = WIDTH - colour_strlen(line) - 7;

      if (colour_strlen(room_desc) < free_space)
      {
         line += repeat_string(" ", (free_space + 4 - colour_strlen(room_desc)));
         line += " " + room_desc;
      }
      else
      {
         room_desc = room_desc[0..(free_space - 4)];

         if (colour_strlen(room_desc) > (free_space - 3))
         {
            room_desc = colour_truncate(room_desc, (free_space - 3));
         }

         line += repeat_string(" ", (free_space + 1 - colour_strlen(room_desc)));
         line += " " + room_desc + "...";
      }
   }

   return line;
}

private void main()
{
   out(get_who_string());
}