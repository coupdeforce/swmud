// Last modified by deforce on 12-08-2007
#include <mudlib.h>
#include <config.h>
#include <classes.h>

inherit CMD;
inherit CLASS_SKILL;

#define WIDTH this_user()->query_screen_width()
#define COLUMNS floor(WIDTH / 37)

private void main(string arg)
{
   object body;
   mapping skills;
   string array lines = ({ });
   int line_count;

   if (wizardp(this_body()) && find_body(arg)) { body = find_body(arg); }
   else { body = this_body(); }

   skills = body->get_skills();

   if (!sizeof(skills))
   {
      out("You have no skills.\n");

      return;
   }

   foreach (string name in keys(skills))
   {
      string capname;
      int skill_value;
      mixed data = SKILL_D->query_skill(name);

      if (!data) { capname = name + " (invalid)"; }
      else
      {
         capname = data[0];
      }

      skill_value = body->query_skill(name);

      if (skill_value > 0)
      {
         int rank = to_int(floor(skill_value / 100));
         int to_next = skill_value - (rank * 100);
         string output = sprintf("%-27s : %2i", capname[0..26], rank);

         if (rank < 10) { output += sprintf("  %2i%%", to_next); }
         else if (rank == 10) { output += "  ***"; }

         lines += ({ output });
      }
   }

   lines = sort_array(lines, 1);
   line_count = ceil(sizeof(lines) / COLUMNS);

   if (COLUMNS > 1)
   {
      out(sprintf("\n\n%%^YELLOW%%^%-29s %-7s%%^RESET%%^", "Skill", "Rank") + repeat_string("    " + sprintf("%%^YELLOW%%^%-29s %-7s%%^RESET%%^", "Skill", "Rank"), COLUMNS - 1) + "\n");
      out(repeat_string("-", 37) + repeat_string("    " + repeat_string("-", 37), COLUMNS - 1) + "\n");
   }
   else
   {
      outf("\n\n%%^YELLOW%%^%-29s %-7s%%^RESET%%^\n", "Skill", "Rank");
      out(repeat_string("-", 37) + "\n");
   }

   for (int count = 0; count < line_count; count++)
   {
      for (int column_count = 0; column_count < COLUMNS; column_count++)
      {
         int index = count + (line_count * column_count);

         if (index < sizeof(lines))
         {
            out((column_count > 0 ? "    " : "") + lines[index]);
         }
      }

      out("\n");
   }
}