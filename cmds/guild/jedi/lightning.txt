// Last edited by deforce on 06-02-2008
inherit VERB_OB;
inherit M_DAMAGE_SOURCE;

int get_floor();
int get_ceiling();
void zap_target(object thing);
void concentration(object thing);

void do_lightning_obj(object thing)
{
   object this_body = this_body();

   set_combat_messages("combat-lightning");

   if (this_body->query_guild_level("jedi"))
   {
      if (this_body->is_body() && !this_body->has_learned_skill("force lightning"))
      {
         write("You have not learned how to channel Force lightning.\n");
      }
      else if (this_body->has_skill_delay())
      {
         write("You are too busy to concentrate on manipulating the Force.\n");
      }
      else
      {
         this_body->simple_action("$N $vdo lightning.");
         if (thing->is_adversary())
         {
            if (thing != this_body)
            {
               int alignment = this_body->query_jedi_alignment();
               int max_alignment = this_body->query_max_jedi_alignment();

               this_body->adjust_jedi_alignment(alignment < 0 ? -5 : (max_alignment - 1) * -1);

               concentration(thing);
            }
            else
            {
               write("That would be incredibly painful, and although maximum pain is the right idea, it would be much better to inflict that pain on something else.\n");
            }
         }
         else
         {
            write("That would be a waste of energy.\n");
         }
      }
   }
   else
   {
      write("Only Jedi know how to manipulate the Force.\n");
   }
}

void do_lightning()
{
   object target = this_body()->get_target();

   if (!this_body()->is_body())
   {
      set_combat_messages("combat-lightning");

      concentration(target);

      return;
   }

   if (target) { do_lightning_obj(target); }
   else { write("Lightning what?\n"); }
}

void zap_target(object thing)
{
   object this_body = this_body();
   int floor = get_floor();
   int ceiling = get_ceiling();
   int amount = floor + random(ceiling - floor + 1);

//   this_body->simple_action("$N can do lightning from " + floor + " to " + ceiling + ", and had a damage roll of " + amount + ".\n");
//   this_body->targetted_action("$N $vsend bolts of lightning from $p hands to $t!\n", thing);
   this_body->add_event(thing, this_object(), choice(({ "head", "torso" })), amount);

   if (member_array(thing, this_body->query_targets()) > -1)
   {
      this_body->handle_events();
   }
   else
   {
      this_body->start_fight(thing);
   }
}

int get_floor()
{
   object this_body = this_body();
   float force = this_body->query_for();
   float level = this_body->query_guild_level("jedi");
   float skill = this_body->query_skill("lightning");
   float level_mod = (skill >= 800 ? 1 : (skill >= 500 ? 2 : (skill >= 200 ? 3 : 4)));
   int amount = ((level / level_mod) * (force / 100.0));

   return (amount > 0 ? amount : 1);
}

int get_ceiling()
{
   object this_body = this_body();
   float force = this_body->query_for();
   float level = this_body->query_guild_level("jedi");
   float skill = this_body->query_skill("lightning");
   float level_mod = (skill >= 100 ? 50 : 25);
   float force_mod = (skill >= 700 ? 100 : (skill >= 400 ? 200 : 400));
   int amount = ((force / 100.0) * (level / 50.0) * level_mod) + (force * (force / force_mod));

   return (amount > 0 ? amount : 1);
}

void concentration(object thing)
{
   object this_body = this_body();
   int alignment = this_body->query_jedi_alignment();

   if (this_body->test_skill("lightning", this_body->query_jedi_alignment() * (alignment < 0 ? -10 : -30)))
   {
      zap_target(thing);
   }
   else
   {
      this_body->simple_action("$N $vattempt to channel Force energy through $p arms and $vlose focus.\n");
   }

   this_body->add_skill_delay(12);
}

void create()
{
   add_rules( ({ "", "OBJ" }) );
}