// Last edited by deforce on 07-09-2008
#include <hooks.h>

inherit VERB_OB;

void perform_healaccel(object body);
void meditation_time(object body);
void clear_heal_accel(object body, int amount);
int has_special_skill_delay(string skill);
string format_time_left(int time);

object this_body;

void do_healaccel_liv(object living)
{
   this_body = this_body();

   if (this_body->query_guild_level("jedi"))
   {
      if (this_body->query_guild_level("assassin"))
      {
         write("You are too dedicated to the Dark side of the Force to use it for healing acceleration.\n");
      }
      else if (living->query_guild_level("assassin") && (living->query_jedi_alignment() < 0))
      {
         write(living->short() + " is too dedicated to the Dark side of the Force to be affected.\n");
      }
      else if (this_body->query_skill("healing") < 600)
      {
         write("You are not experienced enough to know how to accelerate healing.\n");
      }
      else if ((living != this_body) && (this_body->query_skill("healing") < 700))
      {
         write("You are not experienced enough to accelerate another's healing.\n");
      }
      else if (!this_body->has_learned_skill("accelerate healing"))
      {
         write("You have not learned how to accelerate healing with the Force.\n");
      }
      else if (this_body->has_skill_delay())
      {
         write("You are too busy to concentrate on healing acceleration.\n");
      }
      else if (this_body->has_special_skill_delay("accelerate healing"))
      {
         write("You need to wait " + format_time_left(this_body->has_special_skill_delay("accelerate healing")) + " before you can accelerate healing again.\n");
      }
      else if (living->call_hooks("heal_accel", HOOK_SUM))
      {
         write(living->short() + " is already experiencing accelerated healing.\n");
      }
      else
      {
         if (living == this_body)
         {
            this_body->simple_action("$N $vconcentrate on accelerating $p body's healing with the Force...\n");
         }
         else
         {
            this_body->targetted_action("$N $vconcentrate on accelerating $P1 body's healing with the Force...\n", living);
         }

         this_body->adjust_jedi_alignment(2);

         call_out("meditation_time", 6, living);

         this_body->add_skill_delay(10);

         this_body->stun(6);
      }
   }
   else
   {
      write("Only Jedi know how to use the Force for healing.\n");
   }
}

void do_healaccel()
{
   do_healaccel_liv(this_body());
}

void perform_healaccel(object body)
{
   float force = this_body->query_for();
   float level = this_body->query_guild_level("jedi");
   int amount = floor(body->query_heal_rate() * 2 * (force / 50.0) * (level / 100.0));
   int delay = 300 - (((floor(level / 10.0) * 2) + ((force * 8) / 10)));
   int duration = ((floor(level / 5.0) * 2) + ((force * 16) / 10));
   string output = "Your healing is accelerated" + (this_body == body ? "" : " by " + this_body->short()) + ".\n";

   if (amount < 1) { amount = 1; }

//   body->simple_action("$N $vhave a heal rate of " + body->query_heal_rate() + " and it was increased by " + amount + ".\n");
   body->other_action("$N $vare surrounded by a steady, faint blue glow.\n");
   body->add_hook("heal_accel", amount);

   call_out("clear_heal_accel", duration, body, amount);

   if (body != this_body)
   {
      body->adjust_jedi_alignment(3);
   }

   tell(body, output);

   this_body->add_special_skill_delay("accelerate healing", delay);
}

void meditation_time(object body)
{
   int alignment = this_body->query_jedi_alignment();

   if (!this_body) { return; }
   else if (!body || (environment(this_body) != environment(body)))
   {
      write(body->short() + " left and your concentration was broken.\n");

      return;
   }

   if (this_body->test_skill("healing", alignment * (alignment < 0 ? 30 : 8)))
   {
      perform_healaccel(body);
   }
   else
   {
      this_body->simple_action("$N $vlose focus.\n");
      this_body->stun(2);
   }
}

void clear_heal_accel(object body, int amount)
{
   if (!body) { return; }

   body->update_health();

   body->remove_hook("heal_accel", amount);

   body->other_action("The blue glow around $N fades away.\n");

   tell(body, "%^BOLD%^Your healing is no longer accelerated.%^RESET%^\n");
}

string format_time_left(int time)
{
   string output = "";

   if (time > 59)
   {
      if ((time / 60) > 0) { output += (time / 60) + " minute" + ((time / 60) != 1 ? "s" : "") + ", "; }
   }

   output += (time % 60) + " second" + ((time % 60) != 1 ? "s" : "");

   return output;
}

void create()
{
   add_rules( ({ "", "LIV" }) );
}